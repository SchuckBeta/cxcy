<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.oseasy.scr.modules.scr.dao.ScoRuleDao">

	<sql id="scoRuleColumns">
		a.id AS "id",
		a.parent_id AS "parent.id",
		a.parent_ids AS "parentIds",
		a.name AS "name",
		a.type AS "type",
		a.ptype AS "ptype",
		a.is_pb AS "isPb",

		a.is_show AS "isShow",
		a.update_date AS "updateDate",
		a.update_by AS "updateBy.id",
		a.create_date AS "createDate",
		a.create_by AS "createBy.id",
		a.remarks AS "remarks",
		a.del_flag AS "delFlag",

		b.id AS "rdetail.id",
		b.name AS "rdetail.name",
		b.score AS "rdetail.score",
		b.sc_min AS "rdetail.scMin",
		b.sc_max AS "rdetail.scMax",
		b.level AS "rdetail.level",

		b.is_limitm AS "rdetail.isLimitm",
		b.is_half AS "rdetail.isHalf",
		b.half_remarks AS "rdetail.halfRemarks",
		b.join_type AS "rdetail.joinType",
		b.joinmax AS "rdetail.joinMax",
		b.cond_val AS "rdetail.condition",
		b.cond_name AS "rdetail.condName",
		b.cond_type AS "rdetail.condType",
		b.is_condcheck AS "rdetail.isCondcheck",
		b.unit AS "rdetail.unit",
		b.update_date AS "rdetail.updateDate",
		b.update_by AS "rdetail.updateBy.id",
		b.create_date AS "rdetail.createDate",
		b.create_by AS "rdetail.createBy.id",
		b.remarks AS "rdetail.remarks",
		b.del_flag AS "rdetail.delFlag"
	</sql>

	<sql id="scoRuleSingleColumns">
		a.id AS "id",
		a.parent_id AS "parent.id",
		a.parent_ids AS "parentIds",
		a.name AS "name",
		a.type AS "type",
		a.ptype AS "ptype",
		a.is_pb AS "isPb",
		a.is_show AS "isShow",
		a.update_date AS "updateDate",
		a.update_by AS "updateBy.id",
		a.create_date AS "createDate",
		a.create_by AS "createBy.id",
		a.remarks AS "remarks",
		a.del_flag AS "delFlag"
	</sql>

	<sql id="scoRuleSingleDetailColumns">
		a.id AS "id",
		a.parent_id AS "parent.id",
		a.parent_ids AS "parentIds",
		a.name AS "name",
		a.type AS "type",
		a.ptype AS "ptype",
		a.is_pb AS "isPb",
		a.sort AS "sort",
		a.is_show AS "isShow",
		a.update_date AS "updateDate",
		a.update_by AS "updateBy.id",
		a.create_date AS "createDate",
		a.create_by AS "createBy.id",
		a.remarks AS "remarks",
		a.del_flag AS "delFlag",
		m.id AS "scoRuleDetailMould.id",
		m.rid AS "scoRuleDetailMould.rid",
		m.score AS "scoRuleDetailMould.score",
		m.sc_min AS "scoRuleDetailMould.scMin",
		m.sc_max AS "scoRuleDetailMould.scMax",
		m.level AS "scoRuleDetailMould.level",
		m.is_limitm AS "scoRuleDetailMould.isLimitm",
		m.is_half AS "scoRuleDetailMould.isHalf",
		m.half_remarks AS "scoRuleDetailMould.halfRemarks",
		m.join_type AS "scoRuleDetailMould.joinType",
		m.joinmax AS "scoRuleDetailMould.joinMax",
		m.cond_val AS "scoRuleDetailMould.condition",
		m.cond_name AS "scoRuleDetailMould.condName",
	    m.maxorsum AS "scoRuleDetailMould.maxOrSum",
		m.is_lowsco AS "scoRuleDetailMould.isLowSco",
		m.is_join AS "scoRuleDetailMould.isJoin",
		m.lowsco AS "scoRuleDetailMould.lowSco",
		m.lowscomax AS "scoRuleDetailMould.lowScoMax",
		m.cond_type AS "scoRuleDetailMould.condType",
		m.is_condcheck AS "scoRuleDetailMould.isCondcheck",
		m.unit AS "scoRuleDetailMould.unit"
	</sql>

	<sql id="scoRuleSingleJoins">
		LEFT JOIN sco_rule_detail_mould m on m.rid=a.id and m.del_flag=0
	</sql>

	<sql id="scoRuleJoins">
		LEFT JOIN sco_rule_detail b ON b.rid = a.id and b.del_flag=0
	</sql>

	<select id="findScoRule" resultType="ScoRule">
		SELECT
		<include refid="scoRuleSingleColumns"/>
		FROM sco_rule a
		WHERE a.id = #{id}
	</select>

	<select id="findScoRuleSingleDetail" resultType="ScoRule">
		SELECT
		<include refid="scoRuleSingleDetailColumns"/>
		FROM sco_rule a
		<include refid="scoRuleSingleJoins"/>
		WHERE a.id = #{id}
	</select>

	<select id="get" resultType="ScoRule">
		SELECT
			<include refid="scoRuleSingleDetailColumns"/>
		FROM sco_rule a
		<include refid="scoRuleSingleJoins"/>
		WHERE a.id = #{id}
	</select>
	<select id="findByParentIdsLike" resultType="ScoRule">
		SELECT
		<include refid="scoRuleColumns"/>
		FROM sco_rule a
		<include refid="scoRuleJoins"/>
		WHERE a.del_flag = #{DEL_FLAG_NORMAL} AND a.parent_ids LIKE #{parentIds}

	</select>

	<select id="findByParentIds" resultType="ScoRule">
		SELECT
		<include refid="scoRuleColumns"/>
		FROM sco_rule a
		<include refid="scoRuleJoins"/>
		WHERE a.del_flag = #{DEL_FLAG_NORMAL} AND a.parent_ids LIKE '%${parentIds}%'

	</select>
	<select id="scoRuleSingleList" resultType="ScoRule">
		SELECT
		<include refid="scoRuleSingleDetailColumns"/>
		FROM sco_rule a
		<include refid="scoRuleSingleJoins"/>
		<where>
		a.del_flag = #{DEL_FLAG_NORMAL}
			<if test="parent != null">
				<if test="parent.id != null and parent.id != ''">
					and a.parent_id = #{parent.id}
				</if>
			</if>
			<if test="type != null and type != ''">
				and a.type = #{type}
			</if>
		</where>
		<choose>
			<when test="page !=null and page.orderBy != null and page.orderBy != ''">
				ORDER BY ${page.orderBy} ${page.orderByType}
			</when>
			<otherwise>
				ORDER BY a.create_date DESC
			</otherwise>
		</choose>

	</select>

	<select id="ajaxValiScrRuleName" resultType="ScoRule">
		SELECT
		<include refid="scoRuleSingleColumns"/>
		FROM sco_rule a
		<where>
			a.del_flag = #{DEL_FLAG_NORMAL}
			and a.name=#{name}
			and a.type = #{type}
		</where>
	</select>

	<select id="findList" resultType="ScoRule">
		SELECT
			<include refid="scoRuleColumns"/>
		FROM sco_rule a
		<include refid="scoRuleJoins"/>
		<where>
			a.del_flag = #{DEL_FLAG_NORMAL}
			<if test="name != null and name != ''">
				AND a.name LIKE
					<if test="dbName == 'oracle'">'%'||#{name}||'%'</if>
					<if test="dbName == 'mssql'">'%'+#{name}+'%'</if>
					<if test="dbName == 'mysql'">concat('%',#{name},'%')</if>
			</if>
		</where>
		<choose>
			<when test="page !=null and page.orderBy != null and page.orderBy != ''">
				ORDER BY ${page.orderBy} ${page.orderByType}
			</when>
			<otherwise>
				ORDER BY a.update_date DESC
			</otherwise>
		</choose>
	</select>

	<select id="findAllList" resultType="ScoRule">
		SELECT
			<include refid="scoRuleColumns"/>
		FROM sco_rule a
		<include refid="scoRuleJoins"/>
		<where>
			a.del_flag = #{DEL_FLAG_NORMAL}
		</where>
		<choose>
			<when test="page !=null and page.orderBy != null and page.orderBy != ''">
				ORDER BY ${page.orderBy} ${page.orderByType}
			</when>
			<otherwise>
				ORDER BY a.update_date DESC
			</otherwise>
		</choose>
	</select>

	<insert id="insert">
		INSERT INTO sco_rule(
			id,
			parent_id,
			parent_ids,
			name,
			type,
			ptype,
			is_pb,
			is_show,
			update_date,
			update_by,
			create_date,
			create_by,
			remarks,
			del_flag
		) VALUES (
			#{id},
			#{parent.id},
			#{parentIds},
			#{name},
			#{type},
			#{ptype},
			#{isPb},
			#{isShow},
			#{updateDate},
			#{updateBy.id},
			#{createDate},
			#{createBy.id},
			#{remarks},
			#{delFlag}
		)
	</insert>

	<insert id="insertScoRuleDetailMould">
		INSERT INTO sco_rule_detail_mould(
		id,
		rid,

		score,
		sc_min,
		sc_max,
		level,

		maxorsum,
		is_lowsco,
		is_join,
		lowsco,
		lowscomax,

		is_limitm,
		is_half,
		half_remarks,
		join_type,
		joinmax,
		cond_val,
		cond_name,
		cond_type,
		is_condcheck,
		unit,

		del_flag
		) VALUES (
		#{id},
		#{rid},

		#{score},
		#{scMin},
		#{scMax},
		#{level},

		#{maxOrSum},
		#{isLowSco},
		#{isJoin},
		#{lowSco},
		#{lowScoMax},

		#{isLimitm},
		#{isHalf},
		#{halfRemarks},
		#{joinType},
		#{joinMax},
		#{condition},
		#{condName},
		#{condType},
		#{isCondcheck},
		#{unit},

		#{delFlag}
		)
	</insert>
	<update id="updateScoRuleDetailMould">
		UPDATE sco_rule_detail_mould SET

		score = #{score},
		sc_min = #{scMin},
		sc_max = #{scMax},
		level = #{level},

		maxorsum = #{maxOrSum},
		is_lowsco = #{isLowSco},
		is_join = #{isJoin},
		lowsco = #{lowSco},
		lowscomax = #{lowScoMax},

		is_limitm = #{isLimitm},
		is_half = #{isHalf},
		half_remarks = #{halfRemarks},
		join_type = #{joinType},
		joinmax = #{joinMax},
		cond_val = #{condition},
		cond_name = #{condName},
		cond_type = #{condType},
		is_condcheck = #{isCondcheck},
		unit = #{unit}

		WHERE id = #{id}
	</update>

	<insert id="insertPL" >
		INSERT INTO sco_rule(
			id,
			parent_id,
			parent_ids,
			name,
			type,
			ptype,
			is_pb,
			is_show,
			update_date,
			update_by,
			create_date,
			create_by,
			remarks,
			del_flag
		) VALUES (
		<foreach item="item" collection="entitys" index="index" separator=",">
			(
			#{item.id},
			#{item.parent.id},
			#{item.parentIds},
			#{item.name},
			#{item.type},
			#{item.ptype},
			#{item.isPb},
			#{item.isShow},
			#{item.updateDate},
			#{item.updateBy.id},
			#{item.createDate},
			#{item.createBy.id},
			#{item.remarks},
			#{item.delFlag}
			)
		</foreach>
	</insert>

	<update id="update">
		UPDATE sco_rule SET
			parent_id = #{parent.id},
			parent_ids = #{parentIds},
			name = #{name},
			type = #{type},
			ptype = #{ptype},
			is_pb = #{isPb},
			is_show = #{isShow},
			update_date = #{updateDate},
			update_by = #{updateBy.id},
			remarks = #{remarks}
		WHERE id = #{id}
	</update>

	<update id="updatePL" parameterType="java.util.List" >
		UPDATE sco_rule
		<trim prefix="set" suffixOverrides=",">
						<trim prefix="parent_id =case" suffix="end,">
				<foreach item="item" collection="entitys" index="index">
					when id=#{item.id} then #{item.parent.id}
				</foreach>
			</trim>
			<trim prefix="parent_ids =case" suffix="end,">
				<foreach item="item" collection="entitys" index="index">
					when id=#{item.id} then #{item.parentIds}
				</foreach>
			</trim>
			<trim prefix="name =case" suffix="end,">
				<foreach item="item" collection="entitys" index="index">
					when id=#{item.id} then #{item.name}
				</foreach>
			</trim>
			<trim prefix="type =case" suffix="end,">
				<foreach item="item" collection="entitys" index="index">
					when id=#{item.id} then #{item.type}
				</foreach>
			</trim>
			<trim prefix="ptype =case" suffix="end,">
				<foreach item="item" collection="entitys" index="index">
					when id=#{item.id} then #{item.ptype}
				</foreach>
			</trim>
			<trim prefix="is_pb =case" suffix="end,">
				<foreach item="item" collection="entitys" index="index">
					when id=#{item.id} then #{item.isPb}
				</foreach>
			</trim>
			<trim prefix="is_show =case" suffix="end,">
				<foreach item="item" collection="entitys" index="index">
					when id=#{item.id} then #{item.isShow}
				</foreach>
			</trim>
			<trim prefix="update_date =case" suffix="end,">
				<foreach item="item" collection="entitys" index="index">
					when id=#{item.id} then #{item.updateDate}
				</foreach>
			</trim>
			<trim prefix="update_by =case" suffix="end,">
				<foreach item="item" collection="entitys" index="index">
					when id=#{item.id} then #{item.updateBy.id}
				</foreach>
			</trim>
			<trim prefix="remarks =case" suffix="end,">
				<foreach item="item" collection="entitys" index="index">
					when id=#{item.id} then #{item.remarks}
				</foreach>
			</trim>

		</trim>
		WHERE id in
		<foreach item="item" collection="entitys" separator="," open="("
			close=")">
			#{item.id}
		</foreach>
	</update>




	<update id="delete">
		UPDATE sco_rule SET
			del_flag = #{DEL_FLAG_DELETE}
		WHERE id = #{id}
	</update>

	<update id="updateSort">
		UPDATE sco_rule SET
		sort = #{sort}
		WHERE id = #{id}
	</update>
	<update id="deleteByTenant">
		UPDATE sco_rule SET
		del_flag = #{DEL_FLAG_DELETE}
		WHERE tenant_id = #{tenantId}
	</update>

	<update id="deleteScoRuleDetailMouldByScoRule">
		UPDATE sco_rule_detail_mould SET
		del_flag = #{DEL_FLAG_DELETE}
		WHERE rid = #{rid}
	</update>

	<update id="deletePL">
		UPDATE sco_rule SET
			del_flag = #{DEL_FLAG_DELETE}
			WHERE id in
			<foreach item="id" collection="ids" open="(" separator="," close=")">
				#{id}
			</foreach>
	</update>

	<update id="deleteWL">
		DELETE FROM sco_rule WHERE id = #{id}
	</update>

	<update id="deleteWLPL">
		DELETE FROM sco_rule WHERE id in
		<foreach item="id" collection="ids" open="(" separator="," close=")">
			#{id}
		</foreach>
	</update>

	<update id="deleteWLAll">
		DELETE FROM sco_rule
	</update>

	<update id="deleteByParentIds">
		update sco_rule set del_flag=1 WHERE parent_ids LIKE '%${id}%'
	</update>
</mapper>