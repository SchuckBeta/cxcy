<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.oseasy.pro.modules.proprojectmd.dao.ProModelMdDao">
	<resultMap id="exportMap" type="com.oseasy.pro.modules.workflow.vo.ExpProModelMdVo">
		<result column="id" property="id"></result>
		<result column="p_name" property="pname"></result>
		<result column="year" property="year"></result>
		<result column="stage" property="stage"></result>
		<result column="pro_type" property="proType"></result>
		<result column="type" property="type"></result>
		<result column="pro_category" property="proCategory"></result>
		<result column="level" property="level"></result>
		<result column="competitionNumber" property="pno"></result>
		<result column="short_name" property="shortName"></result>
		<result column="teamId" property="teamId"></result>
		<result column="teamName" property="teamName"></result>
		<result column="course" property="course"></result>
		<result column="office_name" property="officeName"></result>
		<result column="school_code" property="officeNo"></result>
		<result column="city_code" property="officeArea"></result>
		<result column="officeAname" property="officeAname"></result>
		<result column="introduction" property="introduction"></result>
		<association property="hasfile" javaType="string" column="proModelId"
			select="com.oseasy.com.fileserver.modules.attachment.dao.SysAttachmentDao.checkHasFile"></association>
		<collection property="teamLeader"
			ofType="com.oseasy.pro.modules.workflow.vo.TeamVo">
			<result column="leader.name" property="name"></result>
			<result column="leader.no" property="no"></result>
			<result column="leader.professional" property="profes"></result>
			<result column="leader.enterDate" property="enter"></result>
			<result column="leader.graduation" property="outy"></result>
			<result column="leader.education" property="xueli"></result>
			<result column="leader.id_no" property="idnum"></result>
			<result column="leader.mobile" property="mobile"></result>
			<result column="leader.email" property="email"></result>
		</collection>

		<collection property="teamOthers"
			ofType="com.oseasy.pro.modules.workflow.vo.TeamVo" column="teamId"
			select="com.oseasy.sys.modules.team.dao.TeamUserHistoryDao.findStudentByTeamId"></collection>

		<collection property="teacherVos"
			ofType="com.oseasy.pro.modules.workflow.vo.TeacherVo" column="teamId"
			select="com.oseasy.sys.modules.team.dao.TeamUserHistoryDao.findTeacherByTeamId"></collection>
	</resultMap>

	<sql id="proModelMdColumns">
		a.id AS "id",
		a.model_id AS "modelId",
		a.app_amount AS "appAmount",
		a.subject AS "subject",
		a.course AS "course",
		a.app_level AS "appLevel",
		a.pro_source AS "proSource",
		a.source_project_name AS "sourceProjectName",
		a.source_project_type AS "sourceProjectType",
		a.iis_incubation AS "iisIncubation",
		a.stage_result AS "stageResult",
		a.result AS "result",
		a.create_by AS "createBy.id",
		a.create_date AS "createDate",
		a.update_by AS "updateBy.id",
		a.update_date AS "updateDate",
		a.del_flag AS "delFlag",
		a.app_begin_date AS "appBeginDate",
		a.app_end_date AS "appEndDate",
		a.reimbursement_amount AS "reimbursementAmount",
		a.set_state AS "setState",
		a.mid_state AS "midState",
		a.close_state AS "closeState",

		pm.id AS "proModel.id",
		pm.actyw_id AS "proModel.actYwId",
		pm.p_name AS "proModel.pName",
		pm.short_name AS "proModel.shortName",
		pm.declare_id AS "proModel.declareId",
		pm.declare_id AS "proModel.deuser.id",
		pm.pro_type AS "proModel.proType",
		u.name AS "proModel.deuser.name",
		u.no AS "proModel.deuser.no",
		u.mobile AS "proModel.deuser.mobile",
		u.professionalName AS "proModel.deuser.professionalName",
		u.school AS "proModel.deuser.school",
		pm.type AS "proModel.type",
		pm.short_name AS "proModel.shortName",
		pm.pro_category AS "proModel.proCategory",
		pm.level AS "proModel.level",
		pm.introduction AS "proModel.introduction",
		pm.financing_stat AS "proModel.financingStat",
		pm.final_status AS "proModel.finalStatus",
		pm.final_result AS "proModel.finalResult",
		pm.end_gnode_id AS "proModel.endGnodeId",
		pm.end_gnode_vesion AS "proModel.endGnodeVesion",
		pm.state AS "proModel.state",
		pm.team_id AS "proModel.teamId",
		pm.update_date AS "proModel.updateDate",
		pm.update_by AS "proModel.updateBy.id",
		pm.create_date AS "proModel.createDate",
		pm.create_by AS "proModel.createBy.id",
		pm.del_flag AS "proModel.delFlag",
		pm.proc_ins_id AS "proModel.procInsId",
		pm.pro_mark AS "proModel.proMark",
		pm.impdata AS "proModel.impdata",
		pm.source AS "proModel.source",
		pm.competition_number AS "proModel.competitionNumber",
		pm.project_level_dict AS "proModel.projectLevelDict",
		pm.project_source AS "proModel.projectSource",
		pm.sub_time AS "proModel.subTime",
		pm.grade AS "proModel.grade",
		pm.g_score AS "proModel.gScore",
		pm.sub_status AS "proModel.subStatus",
		pm.year AS "proModel.year",
		stt.label AS "courseName",
		st.label AS "subjectName",
		sd.label AS "appLevelName"
	</sql>

	<sql id="proModelMdJoins">
		inner JOIN pro_model pm ON pm.id = a.model_id and pm.del_flag = '0'
		LEFT JOIN sys_user u ON u.id = pm.declare_id
		LEFT JOIN sys_office o6 ON o6.id = u.office_id
		LEFT JOIN sys_office op ON op.id = u.professional
		LEFT JOIN sys_dict sd ON sd.value = a.app_level and sd.type = '0000000196'
		LEFT JOIN sys_dict st ON st.value = a.subject and st.type= '0000000111'
		LEFT JOIN sys_dict stt ON stt.value = a.course and stt.type= '000111'
	</sql>

	<select id="get" resultType="ProModelMd">
		SELECT
			<include refid="proModelMdColumns"/>
		FROM pro_model_md a
		<include refid="proModelMdJoins"/>
		WHERE a.id = #{id}
	</select>

	<select id="getByDeclareId" resultType="ProModelMd">
		SELECT
			<include refid="proModelMdColumns"/>
		FROM pro_model_md a
		<include refid="proModelMdJoins"/>
		WHERE pm.declare_id = #{declareId}
		and pm.actyw_id = #{actywId}
		and a.del_flag = '0'
	</select>

	<select id="getByProModelId" resultType="ProModelMd">
		SELECT
			<include refid="proModelMdColumns"/>
		FROM pro_model_md a
		<include refid="proModelMdJoins"/>
		WHERE a.model_id = #{proModelId} and a.del_flag = '0'
	</select>


	<select id="findList" resultType="ProModelMd">
		SELECT
			<include refid="proModelMdColumns"/>
		FROM pro_model_md a
		<include refid="proModelMdJoins"/>
		<where>
			a.del_flag = #{DEL_FLAG_NORMAL}
		</where>
		<choose>
			<when test="page !=null and page.orderBy != null and page.orderBy != ''">
				ORDER BY ${page.orderBy}
			</when>
			<otherwise>
				ORDER BY a.update_date DESC
			</otherwise>
		</choose>
	</select>

	<select id="findAllList" resultType="ProModelMd">
		SELECT
			<include refid="proModelMdColumns"/>
		FROM pro_model_md a
		<include refid="proModelMdJoins"/>
		<where>
			a.del_flag = #{DEL_FLAG_NORMAL}
		</where>
		<choose>
			<when test="page !=null and page.orderBy != null and page.orderBy != ''">
				ORDER BY ${page.orderBy}
			</when>
			<otherwise>
				ORDER BY a.update_date DESC
			</otherwise>
		</choose>
	</select>


	<select id="getListByModel" resultType="ProModelMd"  parameterType="java.util.Map">
		SELECT
			<include refid="proModelMdColumns"/>
		FROM pro_model_md a
		<include refid="proModelMdJoins"/>
		<where>
			a.del_flag ='0' and pm.sub_status='1'
			<if test="actywId != null and actywId != ''">
			AND  pm.actyw_id= #{actywId}
			</if>
			<if test="proCategory != null and proCategory != ''">
				AND pm.pro_category = #{proCategory}
			</if>

			<if test="pName != null and pName != ''">
				AND pm.p_name LIKE concat('%',#{pName},'%')
			</if>
			<if test="queryStr != null and queryStr != ''">
				AND (
					pm.p_name LIKE concat('%',#{queryStr},'%')
					OR pm.competition_number LIKE concat('%',#{queryStr},'%')
					OR u.name LIKE concat('%',#{queryStr},'%')
				)
			</if>
		</where>
		ORDER BY  a.update_date DESC
		limit #{offset},#{pageSize}
	</select>

	<select id="getListByModelCount" resultType="java.lang.Integer" parameterType="java.util.Map">
		SELECT	count(*)
		FROM pro_model_md a
		<include refid="proModelMdJoins"/>
		<where>
			a.del_flag ='0' and pm.sub_status='1'
			<if test="actywId != null and actywId != ''">
			AND  pm.actyw_id= #{actywId}
			</if>
			<if test="proCategory != null and proCategory != ''">
				AND pm.pro_category = #{proCategory}
			</if>
			<if test="pName != null and pName != ''">
				AND pm.p_name LIKE concat('%',#{pName},'%')
			</if>
			<if test="queryStr != null and queryStr != ''">
				AND (
					pm.p_name LIKE concat('%',#{queryStr},'%')
					OR pm.competition_number LIKE concat('%',#{queryStr},'%')
					OR u.name LIKE concat('%',#{queryStr},'%')
				)
			</if>
		</where>
		ORDER BY  a.update_date DESC
	</select>

	<select id="exportMdQuery" parameterType="ProModelMd" resultMap="exportMap">
		SELECT
		pm.id AS id,
		pm.id proModelId,
		pm.p_name,
		pm.year,
		pm.stage,
		pm.pro_type,
		pm.type,
		pm.pro_category,
		(CASE WHEN (pm.pro_type = '1,') THEN pm.final_status WHEN (pm.pro_type = '7,') THEN pm.level ELSE '' END) AS "level",
		pm.short_name,
		pm.introduction AS introduction,
		pm.competition_number AS competitionNumber,
		pmd.course AS course,
		t.id AS teamId,
		t.name AS teamName,
		o6.name AS "office_name",
		o6.school_code AS "school_code",
		o6.city_code AS "city_code",
		sa.name AS "officeAname",
		lstu.name AS "leader.name",
		lstu.no AS "leader.no",
		lop.name AS "leader.professional",
		lss.enterDate AS "leader.enterDate",
		lss.graduation AS "leader.graduation",
		sd.label AS "leader.education",
		lstu.id_no AS "leader.id_no",
		lstu.mobile AS "leader.mobile",
		lstu.email AS "leader.email"

		FROM pro_model_md pmd
		LEFT JOIN pro_model pm ON pmd.model_id = pm.id
		LEFT JOIN act_yw yw ON yw.id = pm.actyw_id
		LEFT JOIN sys_user u ON u.id = pm.declare_id
		LEFT JOIN sys_office o6 ON o6.id = u.office_id
		LEFT JOIN sys_area sa ON sa.code = o6.city_code
		<!-- LEFT JOIN sys_dict pc ON pm.pro_category = pc.value AND pc.type =
			'competition_net_type' AND pc.del_flag = '0' LEFT JOIN sys_dict le ON pm.level
			= le.value AND le.type = 'gcontest_level' AND le.del_flag = '0' -->

		LEFT JOIN team t ON t.id = pm.team_id
		/** 团队负责人 **/
		<!-- LEFT JOIN team_user_history ltuh ON ltuh.team_id = t.id AND ltuh.u_type
			= 1 AND t.sponsor = ltuh.user_id LEFT JOIN sys_user lstu ON ltuh.user_id
			= lstu.id -->
		LEFT JOIN sys_user lstu ON lstu.id = pm.declare_id
		LEFT JOIN sys_student_expansion lss ON lstu.id = lss.user_id
		LEFT JOIN sys_office lop ON lop.id = lstu.professional
		LEFT JOIN sys_dict sd ON lstu.education = sd.value AND sd.type = 'enducation_level'
		<where>
			yw.id = #{actYwId} AND pm.del_flag = '0' AND pm.sub_status = '1'
			<!-- <if test="year != null and year != ''">
				AND pm.year = #{year}
			</if> -->
			<if test="proModel != null">
				<if test="proModel.deuser != null">
					<if test="proModel.deuser.office != null">
						<if test="proModel.deuser.office.id != null and proModel.deuser.office.id != ''">
							AND o6.id = #{proModel.deuser.office.id}
						</if>
					</if>
				</if>
				<if test="proModel.queryStr != null and proModel.queryStr != ''">
					AND (
					pm.p_name LIKE concat('%',#{proModel.queryStr},'%')
					OR
					pm.competition_number LIKE concat('%',#{proModel.queryStr},'%')
					OR u.name LIKE
					concat('%',#{proModel.queryStr},'%')
					)
				</if>
				<if test="proModel.proCategory != null and proModel.proCategory != ''">
					AND pm.pro_category = #{proModel.proCategory}
				</if>
				<if test="proModel.ids != null and proModel.ids.size() != 0">
					AND pm.id in
					<foreach collection="proModel.ids" item="id" open="(" close=")"
						separator=" , ">
						#{id}
					</foreach>
				</if>
			</if>
		</where>
		GROUP BY pm.id
	</select>

	<insert id="insert">
		INSERT INTO pro_model_md(
			id,
			model_id,
			app_amount,
			subject,
			course,
			app_level,
			pro_source,
			source_project_name,
			source_project_type,
			iis_incubation,
			stage_result,
			result,
			create_by,
			create_date,
			update_by,
			update_date,
			del_flag,
			app_begin_date,
			app_end_date,
			set_state,
			mid_state,
			close_state,
			reimbursement_amount
		) VALUES (
			#{id},
			#{modelId},
			#{appAmount},
			#{subject},
			#{course},
			#{appLevel},
			#{proSource},
			#{sourceProjectName},
			#{sourceProjectType},
			#{iisIncubation},
			#{stageResult},
			#{result},
			#{createBy.id},
			#{createDate},
			#{updateBy.id},
			#{updateDate},
			#{delFlag},
			#{appBeginDate},
			#{appEndDate},
			#{setState},
			#{midState},
			#{closeState},
			#{reimbursementAmount}
		)
	</insert>

	<update id="update">
		UPDATE pro_model_md SET
			model_id = #{modelId},
			app_amount = #{appAmount},
			subject = #{subject},
			course = #{course},
 			app_level = #{appLevel},
			pro_source = #{proSource},
			source_project_name = #{sourceProjectName},
			source_project_type = #{sourceProjectType},
			iis_incubation = #{iisIncubation},
			stage_result = #{stageResult},
			result = #{result},
			update_by = #{updateBy.id},
			update_date = #{updateDate},
			app_begin_date = #{appBeginDate},
			app_end_date = #{appEndDate},
			set_state = #{setState},
			mid_state = #{midState},
			close_state = #{closeState},
			reimbursement_amount = #{reimbursementAmount}
		WHERE id = #{id}
	</update>

	<update id="delete">
		UPDATE pro_model_md SET
			del_flag = #{DEL_FLAG_DELETE}
		WHERE id = #{id}
	</update>
	<update id="updatePnum">
		UPDATE pro_model SET
			competition_number = #{pnum}
		WHERE id = #{id}
	</update>
	<update id="updateApprovalResult">
		UPDATE pro_model_md SET
			set_state = #{result}
		WHERE model_id = #{pid}
	</update>
	<update id="updateMidResult">
		UPDATE pro_model_md SET
			mid_state = #{result}
		WHERE model_id = #{pid}
	</update>
	<update id="updateCloseResult">
		UPDATE pro_model_md SET
			close_state = #{result}
		WHERE model_id = #{pid}
	</update>
	<select id="checkMdProNumber" resultType="java.lang.Integer">
		select count(1) from pro_model t where t.del_flag='0' and pro_type='1,' and t.type=#{type} and t.competition_number=#{pnum} and t.id !=#{pid}
	</select>
	<!--查询所有民大promdelId-->
	<select id="getAllPromodelMd" resultType="java.lang.String">
		SELECT
			a.model_id
		FROM pro_model_md a
		<include refid="proModelMdJoins"/>
		<where>
			a.del_flag = '0'
		</where>

	</select>


	<select id="getBySetNoPassList" resultType="java.lang.String">
		SELECT
			a.model_id
		FROM pro_model_md a
		<include refid="proModelMdJoins"/>
		<where>
			a.del_flag = '0' and a.set_state='0'
		</where>

	</select>

	<select id="getByMidNoPassList" resultType="java.lang.String">
		SELECT
			a.model_id
		FROM pro_model_md a
		<include refid="proModelMdJoins"/>
		<where>
			a.del_flag = '0' and a.mid_state='0'
		</where>

	</select>

	<select id="getByCloseNoPassList" resultType="java.lang.String">
		SELECT
			a.model_id
		FROM pro_model_md a
		<include refid="proModelMdJoins"/>
		<where>
			a.del_flag = '0' and a.close_state='0'
		</where>

	</select>

	<select id="getListByModelIds" resultType="ProModelMd" parameterType="java.util.List">
		SELECT
		<include refid="proModelMdColumns"/>
		,IFNULL(a.set_state, '2') AS orderNum
		FROM pro_model_md a
		<include refid="proModelMdJoins"/>
		<where>
			a.del_flag = '0'
			<if test="ids != null and ids.size >0">
				AND a.model_id in
				<foreach item="id" collection="ids" open="(" separator="," close=")">
					#{id}
				</foreach>
			</if>
		</where>
		order by orderNum desc
	</select>




	<select id="checkMdProName" resultType="java.lang.Integer">
		select count(1) from pro_model t where t.del_flag='0' and pro_type='1,'
		and t.p_name=#{pname}
		<if test=" pid !=null and pid !='' ">
		and t.id !=#{pid}
		</if>
		and t.type=#{type}
	</select>


	<select id="findListByIdsUnAudit" resultType="ProModelMd">
		select * from (
		SELECT
		<include refid="proModelMdColumns"/>
		,ifnull(tempayg.cc,0) cc
		FROM pro_model_md a
		<include refid="proModelMdJoins"/>
		left join (
		select ayg.promodel_id,(case when count(ayg.promodel_id)=0 then 0 else 1 end ) cc from act_yw_gassign ayg
		where ayg.del_flag='0' and ayg.gnode_id=#{proModel.gnodeId} and (
		<foreach item="item" collection="ids"  separator=" or ">
			ayg.promodel_id=#{item}
		</foreach>
		)
		group by ayg.promodel_id
		) tempayg on tempayg.promodel_id=pm.id
		left join act_ru_execution ex
		on ex.ACT_ID_ like concat('%',#{proModel.gnodeId},'%') and ex.PROC_INST_ID_=pm.proc_ins_id
		and ex.IS_ACTIVE_='0' and ex.IS_CONCURRENT_='1'
		<where>
			a.del_flag = 0 and ex.ID_ is null
			<if test="ids != null">
				AND pm.id in
				<foreach item="item" collection="ids" open="(" separator=","
						 close=")">
					#{item}
				</foreach>
			</if>
			<if test="proModel.competitionNumber != null and proModel.competitionNumber != ''">
				AND pm.competition_number = #{proModel.competitionNumber}
			</if>
			<if test="proModel.proCategory != null and proModel.proCategory != ''">
				AND pm.pro_category = #{proModel.proCategory}
			</if>
			<if test="proModel.year != null and proModel.year != ''">
				AND pm.year = #{proModel.year}
			</if>
			<if test="proModel.pName != null and proModel.pName != ''">
				AND pm.p_name LIKE concat('%',#{proModel.pName},'%')
			</if>
			<if test="proModel.deuser != null">
				<if test="proModel.deuser.name != null and proModel.deuser.name != ''">
					AND u.name LIKE concat('%',#{proModel.deuser.name},'%')
				</if>
				<if test="proModel.deuser.office != null">
					<if test="proModel.deuser.office.id != null and proModel.deuser.office.id != ''">
						AND o6.id = #{proModel.deuser.office.id}
					</if>
				</if>
			</if>
			<if test="proModel.queryStr != null and proModel.queryStr != ''">
				AND (
				pm.p_name LIKE concat('%',#{proModel.queryStr},'%')
				OR pm.competition_number LIKE concat('%',#{proModel.queryStr},'%')
				OR u.name LIKE concat('%',#{proModel.queryStr},'%')
				)
			</if>
			<if test="proModel.hasAssigns == '0'.toString()">
				and (tempayg.cc is null or tempayg.cc=0)
			</if>
			<if test="proModel.hasAssigns == '1'.toString()">
				and tempayg.cc=1
			</if>
		</where>
		) temtb order by temtb.cc,temtb.`proModel.subTime`
	</select>

</mapper>